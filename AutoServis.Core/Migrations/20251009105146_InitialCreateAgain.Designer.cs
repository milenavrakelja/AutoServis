// <auto-generated />
using System;
using AutoServis.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoServis.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251009105146_InitialCreateAgain")]
    partial class InitialCreateAgain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AutoServis.Core.Models.Dio", b =>
                {
                    b.Property<int>("DioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("KolicinaNaLageru")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("longtext");

                    b.HasKey("DioId");

                    b.ToTable("Djelovi");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Klijent", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adresa")
                        .HasColumnType("longtext");

                    b.Property<string>("Kontakt")
                        .HasColumnType("longtext");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("longtext");

                    b.Property<string>("Lozinka")
                        .HasColumnType("longtext");

                    b.HasKey("KlijentId");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Racun", b =>
                {
                    b.Property<int>("RacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BrojRacuna")
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("DatumIzdavanja")
                        .HasColumnType("date");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UkupnaCijena")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("RacunId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Racuni");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Radnik", b =>
                {
                    b.Property<int>("RadnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Kontakt")
                        .HasColumnType("longtext");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prezime")
                        .HasColumnType("longtext");

                    b.Property<string>("Uloga")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("RadnikId");

                    b.ToTable("Radnici", t =>
                        {
                            t.HasCheckConstraint("CK_Radnik_Uloga", "Uloga IN ('Radnik', 'Administrator')");
                        });
                });

            modelBuilder.Entity("AutoServis.Core.Models.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DatumRezervacije")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DatumUsluge")
                        .HasColumnType("date");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<string>("OpisProblema")
                        .HasColumnType("longtext");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("StatusId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("longtext");

                    b.HasKey("StatusId");

                    b.ToTable("Statusi");
                });

            modelBuilder.Entity("AutoServis.Core.Models.TipUsluge", b =>
                {
                    b.Property<int>("TipUslugeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Naziv")
                        .HasColumnType("longtext");

                    b.HasKey("TipUslugeId");

                    b.ToTable("TipoviUsluge");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Usluga", b =>
                {
                    b.Property<int>("UslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BrojRadnihSati")
                        .HasColumnType("int");

                    b.Property<int>("RadnikId")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TipId")
                        .HasColumnType("int");

                    b.Property<int>("TipUslugeId")
                        .HasColumnType("int");

                    b.HasKey("UslugaId");

                    b.HasIndex("RadnikId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TipUslugeId");

                    b.ToTable("Usluge");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Vozilo", b =>
                {
                    b.Property<int>("VoziloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GodinaProizvodnje")
                        .HasColumnType("int");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.HasKey("VoziloId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Vozila");
                });

            modelBuilder.Entity("DioUsluga", b =>
                {
                    b.Property<int>("DjeloviDioId")
                        .HasColumnType("int");

                    b.Property<int>("UslugeUslugaId")
                        .HasColumnType("int");

                    b.HasKey("DjeloviDioId", "UslugeUslugaId");

                    b.HasIndex("UslugeUslugaId");

                    b.ToTable("DIO_has_USLUGA", (string)null);
                });

            modelBuilder.Entity("StavkaRacuna", b =>
                {
                    b.Property<int>("StavkaRacunaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("CijenaPoJedinici")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("RacunId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ukupno")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.HasKey("StavkaRacunaId");

                    b.HasIndex("RacunId");

                    b.HasIndex("UslugaId");

                    b.ToTable("StavkeRacuna");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Racun", b =>
                {
                    b.HasOne("AutoServis.Core.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoServis.Core.Models.Rezervacija", "Rezervacija")
                        .WithMany("Racuni")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klijent");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Rezervacija", b =>
                {
                    b.HasOne("AutoServis.Core.Models.Klijent", "Klijent")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoServis.Core.Models.Status", "Status")
                        .WithMany("Rezervacije")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klijent");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Usluga", b =>
                {
                    b.HasOne("AutoServis.Core.Models.Radnik", "Radnik")
                        .WithMany("Usluge")
                        .HasForeignKey("RadnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoServis.Core.Models.Rezervacija", "Rezervacija")
                        .WithMany("Usluge")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoServis.Core.Models.Status", "Status")
                        .WithMany("Usluge")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoServis.Core.Models.TipUsluge", "TipUsluge")
                        .WithMany("Usluge")
                        .HasForeignKey("TipUslugeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Radnik");

                    b.Navigation("Rezervacija");

                    b.Navigation("Status");

                    b.Navigation("TipUsluge");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Vozilo", b =>
                {
                    b.HasOne("AutoServis.Core.Models.Klijent", "Klijent")
                        .WithMany("Vozila")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klijent");
                });

            modelBuilder.Entity("DioUsluga", b =>
                {
                    b.HasOne("AutoServis.Core.Models.Dio", null)
                        .WithMany()
                        .HasForeignKey("DjeloviDioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoServis.Core.Models.Usluga", null)
                        .WithMany()
                        .HasForeignKey("UslugeUslugaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StavkaRacuna", b =>
                {
                    b.HasOne("AutoServis.Core.Models.Racun", "Racun")
                        .WithMany("StavkeRacuna")
                        .HasForeignKey("RacunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoServis.Core.Models.Usluga", "Usluga")
                        .WithMany("StavkeRacuna")
                        .HasForeignKey("UslugaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Racun");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Klijent", b =>
                {
                    b.Navigation("Rezervacije");

                    b.Navigation("Vozila");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Racun", b =>
                {
                    b.Navigation("StavkeRacuna");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Radnik", b =>
                {
                    b.Navigation("Usluge");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Rezervacija", b =>
                {
                    b.Navigation("Racuni");

                    b.Navigation("Usluge");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Status", b =>
                {
                    b.Navigation("Rezervacije");

                    b.Navigation("Usluge");
                });

            modelBuilder.Entity("AutoServis.Core.Models.TipUsluge", b =>
                {
                    b.Navigation("Usluge");
                });

            modelBuilder.Entity("AutoServis.Core.Models.Usluga", b =>
                {
                    b.Navigation("StavkeRacuna");
                });
#pragma warning restore 612, 618
        }
    }
}
